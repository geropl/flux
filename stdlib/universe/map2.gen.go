// Generated by tmpl
// https://github.com/benbjohnson/tmpl
//
// DO NOT EDIT!
// Source: map2.gen.go.tmpl

package universe

import (
	"fmt"

	"github.com/influxdata/flux/array"
)

func (m *mapTransformation2) isConstant(arr array.Interface) bool {
	switch arr := arr.(type) {
	case *array.Int:
		return m.isIntConstant(arr)
	case *array.Uint:
		return m.isUintConstant(arr)
	case *array.Float:
		return m.isFloatConstant(arr)
	case *array.String:
		return m.isStringConstant(arr)
	case *array.Boolean:
		return m.isBooleanConstant(arr)

	default:
		panic(fmt.Errorf("unsupported array datat ype: %s", arr.DataType()))
	}
}

func (m *mapTransformation2) isIntConstant(arr *array.Int) bool {
	// If all values are null, then that is still constant.
	if arr.NullN() == arr.Len() {
		return true
	} else if arr.NullN() > 0 {
		// At least one value is null, but not all so
		// not constant by definition.
		return false
	}

	// All values are non-null so check if they are all the same.
	v := arr.Value(0)
	for i, n := 1, arr.Len(); i < n; i++ {
		if arr.Value(i) != v {
			return false
		}
	}
	return true

}

func (m *mapTransformation2) isUintConstant(arr *array.Uint) bool {
	// If all values are null, then that is still constant.
	if arr.NullN() == arr.Len() {
		return true
	} else if arr.NullN() > 0 {
		// At least one value is null, but not all so
		// not constant by definition.
		return false
	}

	// All values are non-null so check if they are all the same.
	v := arr.Value(0)
	for i, n := 1, arr.Len(); i < n; i++ {
		if arr.Value(i) != v {
			return false
		}
	}
	return true

}

func (m *mapTransformation2) isFloatConstant(arr *array.Float) bool {
	// If all values are null, then that is still constant.
	if arr.NullN() == arr.Len() {
		return true
	} else if arr.NullN() > 0 {
		// At least one value is null, but not all so
		// not constant by definition.
		return false
	}

	// All values are non-null so check if they are all the same.
	v := arr.Value(0)
	for i, n := 1, arr.Len(); i < n; i++ {
		if arr.Value(i) != v {
			return false
		}
	}
	return true

}

func (m *mapTransformation2) isStringConstant(arr *array.String) bool {
	// If all values are null, then that is still constant.
	if arr.NullN() == arr.Len() {
		return true
	} else if arr.NullN() > 0 {
		// At least one value is null, but not all so
		// not constant by definition.
		return false
	}

	return arr.IsConstant()

}

func (m *mapTransformation2) isBooleanConstant(arr *array.Boolean) bool {
	// If all values are null, then that is still constant.
	if arr.NullN() == arr.Len() {
		return true
	} else if arr.NullN() > 0 {
		// At least one value is null, but not all so
		// not constant by definition.
		return false
	}

	// All values are non-null so check if they are all the same.
	v := arr.Value(0)
	for i, n := 1, arr.Len(); i < n; i++ {
		if arr.Value(i) != v {
			return false
		}
	}
	return true

}
